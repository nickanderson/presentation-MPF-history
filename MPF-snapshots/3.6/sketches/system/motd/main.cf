body file control
{
      namespace => "cfdc_motd";
}

bundle agent entry(runenv, metadata, motd, motd_path, prepend_command, symlink_path)
{
#@include "REPO/sketch_template/standard.inc"

  vars:
    dc_activated::
      "owner" string => ifelse("dc_test", $(this.promiser_uid),
                               "root"),
      comment => "Owner of the MotD file";

    have_path_prefix::
      "path" string => "$(path_prefix)$(motd_path)",
      comment => "Path of the main MotD";

      "symlink" string => "$(path_prefix)$(symlink_path)";

    prepend_command_given::
      "output" string => execresult("$(exec_prefix)$(prepend_command)",
                                    "useshell");

      "main_lines" slist => { $(output), $(motd) },
      policy => "free",
      comment => "Lines to print to the MotD";

    prepend_command_not_given::
      "main_lines" slist => { $(motd) },
      policy => "free",
      comment => "Lines to print to the MotD";

  classes:
    dc_activated::
      "prepend_command_not_given" expression => strcmp($(prepend_command),"");
      "prepend_command_given" not => strcmp($(prepend_command),"");

      "create_symlink" not => strcmp($(symlink_path),"");

  files:
    have_path_prefix.dc_activated::
      "$(path)"
      pathtype => "literal",
      create => "true",
      move_obstructions => "true",
      edit_defaults => default:empty,
      edit_line => default:insert_lines(@(main_lines)),
      perms => default:mog("444",$(owner),$(owner)),
      comment => "Create and populate the static motd file";

    have_path_prefix.create_symlink::
      "$(symlink)"
      pathtype => "literal",
      move_obstructions => "true",
      link_from => default:ln_s($(path)),
      comment => "create a symlink to the motd file";

  reports:
    have_path_prefix.dc_verbose::
      "$(dcbundle): owner = $(owner)";
      "$(dcbundle): output = '$(output)'" ifvarclass => "prepend_command_given";
      "$(dcbundle): path = $(path)";
      "$(dcbundle): main_lines = $(main_lines)";
      "$(dcbundle): symlink = $(symlink)" ifvarclass => "create_symlink";
}
