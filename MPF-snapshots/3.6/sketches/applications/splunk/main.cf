body file control
{
      namespace => "cfdc_splunk";
}

bundle agent install_forwarder(runenv, metadata, installdir, server, password, comment_marker)
{
#@include "REPO/sketch_template/standard.inc"
  classes:
      # TODO: detect if the forwarder is enabled better
      "splunkforwarder_boot_enabled" expression => fileexists("/etc/init.d/splunk");
      "splunkforwarder_installed" expression => fileexists($(installdir));

    splunkforwarder_installed::
      "splunkforwarder_configured" expression => regline($(comment_marker), "$(installdir)/etc/system/local/outputs.conf");

  vars:
      "return" slist => { "installed", "enabled", "configured", "restarted" };

      "splunkforwarder_control" string => "$(exec_prefix)$(installdir)/bin/splunk";

  processes:
    any::
      "splunkd" restart_class => "splunkforwarder_start";

  files:
    splunkforwarder_installed::
      "$(installdir)/etc/system/local/outputs.conf"
      create => "true",
      perms => default:mog("600", "root", "root"),
      classes => default:if_repaired("splunkforwarder_repaired"),
      edit_defaults => default:empty,
      edit_line => default:expand_template("$(this.promise_dirname)/templates/splunk-outputs.conf");

      "$(installdir)/etc/system/local/inputs.conf"
      create => "true",
      perms => default:mog("600", "root", "root"),
      classes => default:if_repaired("splunkforwarder_repaired"),
      edit_defaults => default:empty,
      edit_line => default:expand_template("$(this.promise_dirname)/templates/splunk-inputs.conf");

      "$(installdir)/ftr"
        delete => default:tidy,
        comment => "Remove first-time read file, to avoid interactive EULA prompt";


  commands:
    !splunkforwarder_installed::
      "$(exec_prefix)/bin/false" -> { "Mission Portal Design Center UI" }
        comment => "Since this sketch does not handle installing
                   splunkforwarder we must have a promise fail if its not present for Mission
                   Portal to detect the sketch is failing.";

    splunkforwarder_installed.!splunkforwarder_configured::
      "$(splunkforwarder_control) edit user admin -password '$(password)' -role admin -auth admin:changeme"
      classes => default:if_ok("splunkforwarder_configured");

    splunkforwarder_installed.!splunkforwarder_boot_enabled::
      "$(splunkforwarder_control) enable boot-start"
      classes => default:if_ok("splunkforwarder_enabled");

    splunkforwarder_installed.splunkforwarder_start::
      "$(splunkforwarder_control) start --no-prompt --answer-yes --accept-license"
      classes => default:if_ok("splunkforwarder_restarted");

    splunkforwarder_repaired::
      "$(splunkforwarder_control) restart --no-prompt --answer-yes --accept-license"
      classes => default:if_ok("splunkforwarder_restarted");

  reports:
      "$(dcbundle): Installing the Splunk Forwarder with parameters installdir='$(installdir)', server='$(server)', password='$(password)', comment_marker='$(comment_marker)'";

    !splunkforwarder_installed::
      "$(dcbundle): You should install the Splunk packages.";

    any::
      "1" bundle_return_value_index => "$(return)",
      ifvarclass => "splunkforwarder_$(return)";

      "" bundle_return_value_index => "$(return)",
      ifvarclass => "!splunkforwarder_$(return)";
}
